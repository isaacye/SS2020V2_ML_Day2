# -*- coding: utf-8 -*-
"""Mar18_LR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TaBBvlJEVs_8cnVkbq95Z5PeberznEsL
"""

import numpy as np
import matplotlib.pyplot as plt

X = list(range(10))
Y = [1, 1, 2, 4, 5, 7, 8, 9, 10, 9]
plt.scatter(X,Y)
plt.savefig('datascatter.png')
plt.close()

class H(): 
    def __init__(self, w): 
        self.w = w   
    def forward(self, x):
        return self.w * x

def cost(h, X, Y):
    error = 0
    for i in range(len(X)):
        error += (h.forward(X[i]) - Y[i])**2
    error = error / len(X)
    return error

def cal_grad(w, cost): 
    h = H(w)
    grad = 0
    for i in range(len(X)):
        grad += 2 * (h.forward(X[i]) - Y[i]) * X[i]
    grad = grad / len(X)
    c = cost(h, X, Y)
    return grad, c

w = 1.4

lr = 0.01

list_w= []
list_c= []
for i in range(100): 
    grad, mean_cost = cal_grad(w, cost)
    w -= lr * grad
    list_w.append(w)
    list_c.append(mean_cost)
print(w, mean_cost) 
plt.scatter(list_w, list_c, marker='*')

x_grid=np.arange(10)
pred_y = w*x_grid
plt.plot(X,pred_y)
plt.scatter(X,Y)